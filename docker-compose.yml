version: "3"
services:

  app:
    image: dockercristinabuciu/proiect-cc-app:v2
    links:
      - db
    ports:
      - "3003:3000"
#      - "8000:8000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
#    deploy:
#      placement:
#        constraints: [node.role == manager]
    networks:
      - mynet

  server:
    image: dockercristinabuciu/proiect-cc-server:latest
    links:
      - db
    ports:
      - "5000:5000"
      - "8000:8000"
    networks:
      - mynet

  token-generator:
    image: dockercristinabuciu/proiect-cc-token-generator:v1
    links:
      - db
    ports:
      - "5001:5000"
    networks:
      - mynet

  db:
    image: mysql:5.7
    ports:
      - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
    networks:
      - mynet

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus:/etc/prometheus:ro
    networks:
      - mynet

#  visualizer:
#    image: dockersamples/visualizer:stable
#    ports:
#      - "8080:8080"
#    stop_grace_period: 1m30s
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#      placement:
#        constraints: [node.role == manager]
#    networks:
#      - mynet


#  grafana:
#    image: grafana/grafana
#    volumes:
#      - grafanadata:/var/lib/grafana
#      - ./dashboards:/dashboards
#      - ./grafana.ini:/etc/grafana/grafana.ini
#    ports:
#      - "3000:3000"
#    environment:
#      GF_USERS_DEFAULT_THEME: light
#    #  GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
#    depends_on:
#      - prometheus
#    networks:
#      - mynet

networks:
  mynet:
